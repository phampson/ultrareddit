{"ast":null,"code":"import _classCallCheck from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Parker/Desktop/ww_challenge/reddit/src/Post/Post.js\";\nimport React, { Component } from 'react';\nimport { Jumbotron, Panel } from 'react-bootstrap';\nimport axios from 'axios';\n\nvar Post =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Post, _Component);\n\n  function Post(props) {\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    _this.state = {\n      posts: []\n    };\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(Post, [{\n    key: \"collectPosts\",\n    value: function collectPosts() {\n      axios.get('http://www.reddit.com/r/' + this.props.subreddit + '/.json').then(function (response) {\n        console.log(\"===>Inside the promise<===\");\n        this.setState({\n          posts: response.data.data.children.slice(0, 10)\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.collectPosts();\n\n      if (this.state.posts.length > 0) {\n        return React.createElement(\"div\", {\n          className: \"App-wrapper title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, this.state.posts.map(function (post) {\n          return React.createElement(\"a\", {\n            href: 'http://www.reddit.com/' + post.data.permalink,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, React.createElement(Panel, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, React.createElement(Panel.Heading, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, React.createElement(Panel.Title, {\n            componentClass: \"h3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"panelTitle\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, post.data.author, \" posted on \", post.data.subreddit))), React.createElement(Panel.Body, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, post.data.title)));\n        }));\n      } else {\n        return React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"Empty Subreddit\");\n      }\n    }\n  }]);\n\n  return Post;\n}(Component);\n\nexport default Post;","map":{"version":3,"sources":["/Users/Parker/Desktop/ww_challenge/reddit/src/Post/Post.js"],"names":["React","Component","Jumbotron","Panel","axios","Post","props","state","posts","get","subreddit","then","response","console","log","setState","data","children","slice","catch","error","collectPosts","length","map","post","permalink","author","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,iBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AADgB;AAIjB;;;;mCACa;AACZJ,MAAAA,KAAK,CAACK,GAAN,CAAU,6BAA4B,KAAKH,KAAL,CAAWI,SAAvC,GAAkD,QAA5D,EACGC,IADH,CACQ,UAASC,QAAT,EAAmB;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,aAAKC,QAAL,CAAc;AAACP,UAAAA,KAAK,EAAEI,QAAQ,CAACI,IAAT,CAAcA,IAAd,CAAmBC,QAAnB,CAA4BC,KAA5B,CAAkC,CAAlC,EAAqC,EAArC;AAAR,SAAd;AACD,OAJH,EAKGC,KALH,CAKS,UAASC,KAAT,EAAgB;AACrBP,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD,OAPH;AAQD;;;6BACO;AACN,WAAKC,YAAL;;AACA,UAAG,KAAKd,KAAL,CAAWC,KAAX,CAAiBc,MAAjB,GAA0B,CAA7B,EAA+B;AAC7B,eACE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,KAAKf,KAAL,CAAWC,KAAX,CAAiBe,GAAjB,CAAqB,UAAAC,IAAI;AAAA,iBACxB;AAAG,YAAA,IAAI,EAAE,2BAAyBA,IAAI,CAACR,IAAL,CAAUS,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,KAAD,CAAO,KAAP;AAAa,YAAA,cAAc,EAAC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGD,IAAI,CAACR,IAAL,CAAUU,MADb,iBACgCF,IAAI,CAACR,IAAL,CAAUN,SAD1C,CADF,CADF,CADF,EAQE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGc,IAAI,CAACR,IAAL,CAAUW,KADb,CARF,CADA,CADwB;AAAA,SAAzB,CADD,CADF;AAoBD,OArBD,MAqBO;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF;AAGD;AACF;;;;EA5CgB1B,S;;AA+CnB,eAAeI,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Jumbotron, Panel } from 'react-bootstrap';\nimport axios from 'axios'\n\nclass Post extends Component {\n  constructor(props){\n    this.state = {\n      posts: []\n    }\n  }\n  collectPosts(){\n    axios.get('http://www.reddit.com/r/'+ this.props.subreddit +'/.json')\n      .then(function(response) {\n        console.log(\"===>Inside the promise<===\");\n        this.setState({posts: response.data.data.children.slice(0, 10)});\n      })\n      .catch(function(error) {\n        console.log(error);\n      })\n  }\n  render(){\n    this.collectPosts();\n    if(this.state.posts.length > 0){\n      return(\n        <div className=\"App-wrapper title\">\n        {this.state.posts.map(post =>\n          <a href={'http://www.reddit.com/'+post.data.permalink}>\n          <Panel>\n            <Panel.Heading>\n              <Panel.Title componentClass=\"h3\">\n                <div className=\"panelTitle\">\n                  {post.data.author} posted on {post.data.subreddit}\n                </div>\n              </Panel.Title>\n            </Panel.Heading>\n            <Panel.Body>\n              {post.data.title}\n            </Panel.Body>\n          </Panel>\n          </a>\n        )}\n        </div>\n      );\n    } else {\n      return(\n        <h5>Empty Subreddit</h5>\n      );\n    }\n  }\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}
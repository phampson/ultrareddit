{"ast":null,"code":"import _classCallCheck from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Parker/Desktop/ww_challenge/reddit/src/Navbar/Navigationbar.js\";\nimport React, { Component } from 'react';\nimport { Button, Navbar, Nav, NavItem, Glyphicon, NavDropdown, MenuItem, Form, FormGroup, FormControl, ControlLabel, HelpBlock } from 'react-bootstrap';\nimport './Navigationbar.css';\n\nvar Navigationbar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Navigationbar, _Component);\n\n  function Navigationbar() {\n    _classCallCheck(this, Navigationbar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Navigationbar).apply(this, arguments));\n  }\n\n  _createClass(Navigationbar, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      console.log(this.props.subreddits);\n\n      if (this.props.subreddits) {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, React.createElement(Navbar, {\n          inverse: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, React.createElement(Navbar.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, React.createElement(Navbar.Brand, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"brand\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, \"UltraReddit\"))), React.createElement(Navbar.Collapse, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(Navbar.Form, {\n          pullRight: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: this.props.addSub,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \"Name:\", React.createElement(\"input\", {\n          type: \"text\",\n          value: this.props.newSubreddit,\n          onChange: this.props.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        })), React.createElement(\"input\", {\n          type: \"submit\",\n          value: \"Submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }))), React.createElement(Nav, {\n          pullRight: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(NavDropdown, {\n          eventKey: 3,\n          title: \"SubRedits\",\n          id: \"basic-nav-dropdown\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, this.props.subreddits.map(function (sub, index) {\n          return React.createElement(MenuItem, {\n            eventKey: 3.1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, sub, React.createElement(Button, {\n            type: \"button\",\n            className: \"close\",\n            \"aria-label\": \"Close\",\n            onClick: function onClick() {\n              return _this.props.removeSub(index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            \"aria-hidden\": \"true\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, \"\\xD7\")));\n        }), React.createElement(MenuItem, {\n          divider: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }))))));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(Navbar, {\n          inverse: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(Navbar.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(Navbar.Brand, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"brand\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"UltraReddit\"))), React.createElement(Navbar.Collapse, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(Nav, {\n          pullRight: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(NavDropdown, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(MenuItem, {\n          eventKey: 3.1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"/r/something LOADING...\"), React.createElement(MenuItem, {\n          divider: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }), React.createElement(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          controlId: \"formBasicText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(FormControl, {\n          type: \"text\",\n          placeholder: \"New Subreddit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }))))))));\n      }\n    }\n  }]);\n\n  return Navigationbar;\n}(Component);\n\nexport default Navigationbar;","map":{"version":3,"sources":["/Users/Parker/Desktop/ww_challenge/reddit/src/Navbar/Navigationbar.js"],"names":["React","Component","Button","Navbar","Nav","NavItem","Glyphicon","NavDropdown","MenuItem","Form","FormGroup","FormControl","ControlLabel","HelpBlock","Navigationbar","console","log","props","subreddits","addSub","newSubreddit","handleChange","map","sub","index","removeSub"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Navbar, Nav, NavItem, Glyphicon, NavDropdown, MenuItem, Form, FormGroup, FormControl, ControlLabel, HelpBlock } from 'react-bootstrap';\nimport './Navigationbar.css';\n\nclass Navigationbar extends Component {\n  render() {\n    console.log(this.props.subreddits);\n    if(this.props.subreddits){\n      return(\n        <div className=\"App\">\n          <Navbar inverse>\n            <Navbar.Header>\n              <Navbar.Brand>\n                <div className=\"brand\">UltraReddit</div>\n              </Navbar.Brand>\n            </Navbar.Header>\n            <Navbar.Collapse>\n              <Navbar.Form pullRight>\n              <form onSubmit={this.props.addSub}>\n                <label>\n                  Name:\n                  <input type=\"text\" value={this.props.newSubreddit} onChange={this.props.handleChange} />\n                </label>\n                <input type=\"submit\" value=\"Submit\" />\n              </form>\n              </Navbar.Form>\n              <Nav pullRight>\n                <NavDropdown eventKey={3} title=\"SubRedits\" id=\"basic-nav-dropdown\">\n                {\n                    this.props.subreddits.map((sub, index) =>\n                    <MenuItem eventKey={3.1}>\n                      {sub}\n                      <Button\n                        type=\"button\"\n                        className=\"close\"\n                        aria-label=\"Close\"\n                        onClick={() => this.props.removeSub(index)}\n                      >\n                        <span aria-hidden=\"true\">&times;</span>\n                      </Button>\n                    </MenuItem>\n                )}\n                  <MenuItem divider />\n\n                </NavDropdown>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <Navbar inverse>\n            <Navbar.Header>\n              <Navbar.Brand>\n                <div className=\"brand\">UltraReddit</div>\n              </Navbar.Brand>\n            </Navbar.Header>\n            <Navbar.Collapse>\n              <Nav pullRight>\n                <NavDropdown>\n                  <MenuItem eventKey={3.1}>/r/something\n                    LOADING...\n                  </MenuItem>\n                  <MenuItem divider />\n                  <form>\n                    <FormGroup controlId=\"formBasicText\">\n                      <FormControl type=\"text\" placeholder=\"New Subreddit\"/>\n                    </FormGroup>\n                  </form>\n                </NavDropdown>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Navigationbar;\n"]},"metadata":{},"sourceType":"module"}
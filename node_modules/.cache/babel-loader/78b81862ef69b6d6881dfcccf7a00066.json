{"ast":null,"code":"import _toConsumableArray from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Parker/Desktop/ww_challenge/reddit/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport Navigationbar from \"./Navbar/Navigationbar.js\";\nimport { Jumbotron, Panel } from 'react-bootstrap';\nimport './App.css';\nimport axios from 'axios';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      subreddits: [],\n      posts: [],\n      newSubreddit: ''\n    };\n    _this.removeSub = _this.removeSub.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addSub = _this.addSub.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"removeSub\",\n    value: function removeSub(i) {\n      // Removing the proper subreddit\n      this.state.subreddits.splice(i, 1);\n    }\n  }, {\n    key: \"addSub\",\n    value: function addSub() {\n      // Adding a valid subreddit if axios returns with information\n      alert(\"using: 'http://www.reddit.com/r/\" + this.state.newSubreddit + \"/.json'\");\n      axios.get('https://www.reddit.com/r/' + this.state.newSubreddit + '/.json').then(function (res) {//this.state.subreddits.push(this.state.newSubreddit);\n      });\n\n      if (localStorage.getItem(\"subreddits\")) {\n        this.state.subreddits = _toConsumableArray(this.state.subreddits).concat([this.state.newSubreddit]);\n        localStorage.setItem(\"subreddits\", this.state.subreddits);\n      } else {\n        //First entry\n        localStorage.setItem(\"subreddits\", [this.state.newSubreddit]);\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        newSubreddit: event.target.value\n      });\n      console.log(this.state.newSubreddit);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // Check to see if we have anything stored\n      if (localStorage.getItem(\"subreddits\")) {\n        this.state.subreddits = localStorage.getItem(\"subreddits\");\n      } else {\n        localStorage.setItem(\"subreddits\", ['asdf']);\n      } // Try to get all of our posts from reddit's api\n\n\n      axios.get('http://www.reddit.com/r/todayilearned/.json').then(function (res) {\n        var posts = res.data.data.children.map(function (obj) {\n          return obj.data;\n        });\n\n        _this2.setState({\n          posts: posts\n        });\n      }); //console.log(\"Check if our SubRedits will ever update!\")\n      //console.log(this.state.subreddits);\n\n      if (this.state.posts && this.state.posts.length > 0) {\n        return React.createElement(\"div\", {\n          className: \"App-wrapper title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(Navigationbar, {\n          subreddits: this.state.subreddits,\n          newSubreddit: this.state.newSubreddit,\n          removeSub: this.removeSub.bind(this),\n          addSub: this.addSub.bind(this),\n          handleChange: this.handleChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"panelContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, this.state.posts.map(function (post) {\n          return React.createElement(\"a\", {\n            href: 'http://www.reddit.com/' + post.permalink,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, React.createElement(Panel, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, React.createElement(Panel.Heading, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, React.createElement(Panel.Title, {\n            componentClass: \"h3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"panelTitle\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, post.author, \" posted on \", post.subreddit))), React.createElement(Panel.Body, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, post.title)));\n        })));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"App-wrapper title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(Navigationbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }), React.createElement(Jumbotron, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Hi there friend\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"It looks like you have no subreddits, oh my!!! Add one up above.\")));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Parker/Desktop/ww_challenge/reddit/src/App.js"],"names":["React","Component","Navigationbar","Jumbotron","Panel","axios","App","props","state","subreddits","posts","newSubreddit","removeSub","bind","addSub","handleChange","i","splice","alert","get","then","res","localStorage","getItem","setItem","event","setState","target","value","console","log","data","children","map","obj","length","post","permalink","author","subreddit","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport Navigationbar from \"./Navbar/Navigationbar.js\";\nimport { Jumbotron, Panel } from 'react-bootstrap';\nimport './App.css';\nimport axios from 'axios'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      subreddits: [],\n      posts: [],\n      newSubreddit: ''\n    }\n    this.removeSub = this.removeSub.bind(this);\n    this.addSub = this.addSub.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  removeSub(i){\n    // Removing the proper subreddit\n    this.state.subreddits.splice(i, 1);\n  }\n\n  addSub(){\n    // Adding a valid subreddit if axios returns with information\n    alert(\"using: 'http://www.reddit.com/r/\" + this.state.newSubreddit + \"/.json'\");\n    axios.get('https://www.reddit.com/r/' + this.state.newSubreddit + '/.json').then(res => {\n      //this.state.subreddits.push(this.state.newSubreddit);\n    })\n    if(localStorage.getItem(\"subreddits\")){\n      this.state.subreddits =  [...this.state.subreddits, this.state.newSubreddit];\n      localStorage.setItem(\"subreddits\", this.state.subreddits);\n    } else {\n      //First entry\n      localStorage.setItem(\"subreddits\", [this.state.newSubreddit]);\n    }\n  }\n\n  handleChange(event){\n    this.setState({newSubreddit: event.target.value});\n    console.log(this.state.newSubreddit);\n  }\n\n  render() {\n    // Check to see if we have anything stored\n    if(localStorage.getItem(\"subreddits\")){\n      this.state.subreddits =  localStorage.getItem(\"subreddits\");\n    } else {\n      localStorage.setItem(\"subreddits\", ['asdf']);\n    }\n\n    // Try to get all of our posts from reddit's api\n    axios.get('http://www.reddit.com/r/todayilearned/.json').then(res => {\n      const posts = res.data.data.children.map(obj => obj.data);\n      this.setState({posts});\n    })\n\n    //console.log(\"Check if our SubRedits will ever update!\")\n    //console.log(this.state.subreddits);\n\n    if (this.state.posts && this.state.posts.length > 0){\n      return (\n        <div className=\"App-wrapper title\">\n          <Navigationbar\n            subreddits={this.state.subreddits}\n            newSubreddit={this.state.newSubreddit}\n            removeSub={this.removeSub.bind(this)}\n            addSub={this.addSub.bind(this)}\n            handleChange={this.handleChange.bind(this)}\n          />\n          <div className=\"panelContainer\">\n            {this.state.posts.map(post =>\n              <a href={'http://www.reddit.com/'+post.permalink}>\n              <Panel>\n                <Panel.Heading>\n                  <Panel.Title componentClass=\"h3\">\n                    <div className=\"panelTitle\">\n                      {post.author} posted on {post.subreddit}\n                    </div>\n                  </Panel.Title>\n                </Panel.Heading>\n                <Panel.Body>\n                  {post.title}\n                </Panel.Body>\n              </Panel>\n              </a>\n            )}\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App-wrapper title\">\n          <Navigationbar />\n          <Jumbotron>\n            <h1>Hi there friend</h1>\n            <p>\n              It looks like you have no subreddits, oh my!!! Add one up above.\n            </p>\n          </Jumbotron>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Parker/Desktop/ww_challenge/reddit/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Parker/Desktop/ww_challenge/reddit/src/Navbar/Navigationbar.js\";\nimport React, { Component } from 'react';\nimport { Button, Navbar, Nav, NavDropdown, MenuItem, FormGroup, FormControl } from 'react-bootstrap';\nimport './Navigationbar.css';\n\nvar Navigationbar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Navigationbar, _Component);\n\n  function Navigationbar() {\n    _classCallCheck(this, Navigationbar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Navigationbar).apply(this, arguments));\n  }\n\n  _createClass(Navigationbar, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        inverse: true,\n        staticTop: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(Navbar.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(Navbar.Brand, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"brand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"UltraReddit\"))), React.createElement(Navbar.Collapse, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(Navbar.Form, {\n        pullRight: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.props.addSub,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        value: this.props.newSubreddit,\n        placeholder: \"new subreddit\",\n        onChange: this.props.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Add\"))), React.createElement(Nav, {\n        pullRight: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(NavDropdown, {\n        title: \"Subredits\",\n        id: \"basic-nav-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.props.subreddits.map(function (subreddit, index) {\n        return React.createElement(MenuItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \" \", subreddit, React.createElement(Button, {\n          type: \"button\",\n          className: \"close\",\n          \"aria-label\": \"Close\",\n          onClick: function onClick() {\n            return _this.props.removeSub(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"\\xD7\")));\n      }))))));\n    }\n  }]);\n\n  return Navigationbar;\n}(Component);\n\nexport default Navigationbar;","map":{"version":3,"sources":["/Users/Parker/Desktop/ww_challenge/reddit/src/Navbar/Navigationbar.js"],"names":["React","Component","Button","Navbar","Nav","NavDropdown","MenuItem","FormGroup","FormControl","Navigationbar","props","addSub","newSubreddit","handleChange","subreddits","map","subreddit","index","removeSub"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,GAAzB,EAA8BC,WAA9B,EAA2CC,QAA3C,EAAqDC,SAArD,EAAgEC,WAAhE,QAAmF,iBAAnF;AACA,OAAO,qBAAP;;IAEMC,a;;;;;;;;;;;;;6BACK;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,SAAS,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD,CAAQ,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,CADF,EAME,oBAAC,MAAD,CAAQ,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD,CAAQ,IAAR;AAAa,QAAA,SAAS,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAM,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,YAFpB;AAGE,QAAA,WAAW,EAAC,eAHd;AAIE,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,YAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EASE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,CADA,CADF,EAcE,oBAAC,GAAD;AAAK,QAAA,SAAS,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAC,WAAnB;AAA+B,QAAA,EAAE,EAAC,oBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKH,KAAL,CAAWI,UAAX,CAAsBC,GAAtB,CAA0B,UAACC,SAAD,EAAYC,KAAZ;AAAA,eAC1B,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYD,SAAZ,EACE,oBAAC,MAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,OAFZ;AAGE,wBAAW,OAHb;AAIE,UAAA,OAAO,EAAE;AAAA,mBAAM,KAAI,CAACN,KAAL,CAAWQ,SAAX,CAAqBD,KAArB,CAAN;AAAA,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME;AAAM,yBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,CADF,CAD0B;AAAA,OAA1B,CADJ,CADF,CAdF,CANF,CADF,CADF;AA2CD;;;;EA7CyBhB,S;;AAgD5B,eAAeQ,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Navbar, Nav, NavDropdown, MenuItem, FormGroup, FormControl } from 'react-bootstrap';\nimport './Navigationbar.css';\n\nclass Navigationbar extends Component {\n  render() {\n    return(\n      <div className=\"App\">\n        <Navbar inverse staticTop>\n          <Navbar.Header>\n            <Navbar.Brand>\n              <div className=\"brand\">UltraReddit</div>\n            </Navbar.Brand>\n          </Navbar.Header>\n          <Navbar.Collapse>\n            <Navbar.Form pullRight>\n            <form onSubmit={this.props.addSub}>\n              <FormGroup controlId=\"formBasicText\">\n                <FormControl\n                  type=\"text\"\n                  value={this.props.newSubreddit}\n                  placeholder=\"new subreddit\"\n                  onChange={this.props.handleChange}\n                />\n              </FormGroup>\n              <Button type=\"submit\">Add</Button>\n            </form>\n            </Navbar.Form>\n            <Nav pullRight>\n              <NavDropdown title=\"Subredits\" id=\"basic-nav-dropdown\">\n                { this.props.subreddits.map((subreddit, index) =>\n                  <MenuItem> {subreddit}\n                    <Button\n                      type=\"button\"\n                      className=\"close\"\n                      aria-label=\"Close\"\n                      onClick={() => this.props.removeSub(index)}\n                    >\n                      <span aria-hidden=\"true\">&times;</span>\n                    </Button>\n                  </MenuItem>\n                )}\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </div>\n    );\n\n  }\n}\n\nexport default Navigationbar;\n"]},"metadata":{},"sourceType":"module"}